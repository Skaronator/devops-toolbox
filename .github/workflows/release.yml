name: Release

on:
  push:
    branches: [ "main" ]
    # paths:
    # - 'tools.yaml'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        default_bump: major

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # - name: Log into Docker Hub registry
    #   if: github.event_name != 'pull_request'
    #   uses: docker/login-action@v3.0.0
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log into GHCR registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3.0.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5.3.0
      with:
        images: |
          ghcr.io/skaronator/devops-toolbox
        tags: |
          type=semver,pattern={{major}},value=${{ steps.tag_version.outputs.new_tag }}
        labels: |
          org.opencontainers.image.title=devops-toolbox
          org.opencontainers.image.description=Toolbox that contains all useful tools for my day to day job.
          org.opencontainers.image.vendor=Skaronator

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v5.1.0
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        provenance: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
