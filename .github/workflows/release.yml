name: Release

on:
  push:
    branches: [ "main" ]
    paths:
    - 'tools.yaml'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.1
      with:
        fetch-depth: 0
  
    - name: Increment Version
      id: version
      run: |
        current_version=$(git describe --tags --abbrev=0 2>/dev/null | sed 's/v//g' || echo "0")
        new_version=v$((current_version + 1))

        echo "Current version: $current_version"
        echo "New version: $new_version"
        echo "new_version=$new_version" >> "$GITHUB_OUTPUT"

    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r builder/requirements.txt

    - name: Run builder
      run: |
        python builder/main.py

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3.0.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.1.0

    # - name: Log into Docker Hub registry
    #   if: github.event_name != 'pull_request'
    #   uses: docker/login-action@v3.0.0
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log into GHCR registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3.0.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: |
          ghcr.io/skaronator/devops-toolbox
        tags: |
          type=raw,value=${{ steps.version.outputs.new_version }}
          type=raw,value=latest

    - name: Get tool versions          
      uses: mikefarah/yq@v4.42.1
      id: tool_versions
      with:
        cmd: yq e '.tools | sort_by(.name) | .[] | (.name + " " + .version)' tools.yaml

    - name: Publish tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

        git tag -a ${{ steps.version.outputs.new_version }} -m "Release ${{ steps.version.outputs.new_version }}" -m "Contains" -m "${{ steps.tool_versions.outputs.result }}"
        git push origin ${{ steps.version.outputs.new_version }}

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v5.1.0
      with:
        context: .
        push: true
        provenance: false
        tags: ${{ steps.meta.outputs.tags }}

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.new_version }}
        generate_release_notes: true
        body: |
          ## Included Versions
          ```txt
          ${{ steps.tool_versions.outputs.result }}
          ```
